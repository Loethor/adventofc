{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Make: Run Solution",
            "type": "shell",
            "command": "make",
            "args": [
                "run",
                "YEAR=${input:year}",
                "DAY=${input:day}"
            ],
            "problemMatcher": [],
            "group": "build",
            "detail": "Run solution for a specific Advent of Code problem",
            "options": {
                "cwd": "${workspaceFolder}",
                "shell": {
                    "executable": "C:\\Program Files\\Git\\bin\\bash.exe",
                    "args": [
                        "-c"
                    ]
                }
            }
        },
        {
            "label": "Make: Clean Executables",
            "type": "shell",
            "command": "make",
            "args": [
                "clean"
            ],
            "problemMatcher": [],
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}",
                "shell": {
                    "executable": "C:\\Program Files\\Git\\bin\\bash.exe",
                    "args": [
                        "-c"
                    ]
                }
            },
            "detail": "Clean up generated executables"
        },
        {
            "type": "cppbuild",
            "label": "C/C++: gcc.exe build active file",
            "command": "C:/Program Files (x86)/mingw64/bin/gcc.exe",
            "args": [
                "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "C:/Program Files (x86)/mingw64/bin"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "Task generated by Debugger."
        }
    ],
    "inputs": [
        {
            "id": "year",
            "type": "promptString",
            "description": "Enter the year (e.g., 2024)"
        },
        {
            "id": "day",
            "type": "promptString",
            "description": "Enter the day (e.g., 1)"
        }
    ]
}